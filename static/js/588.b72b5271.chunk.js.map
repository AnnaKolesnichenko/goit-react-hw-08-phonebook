{"version":3,"file":"static/js/588.b72b5271.chunk.js","mappings":"sQA2HA,UAnHkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KAAaC,IAAI,GAAGC,SAAS,6BACpCJ,SAAUE,EAAAA,KAAaC,IAAI,GAAGC,SAAS,+BAEzCC,SAAU,SAAAC,GACRZ,GACEa,EAAAA,EAAAA,IAAe,CACbR,MAAOO,EAAOP,MACdC,SAAUM,EAAON,YAGrBJ,EAAOY,WACT,IAGIC,EAAc,WAClB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAQC,MAAO,CAACC,MAAO,UAAWC,UAAW,OAAQC,UAAW,IAAIC,SAAEpB,EAAOqB,OAAOC,MAEvG,EAEMC,EAAmB,CACvBC,gBAAgB,OAADC,OAASC,EAAC,KACzBC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,MACpBC,MAAO,QACPC,OAAQ,QACRZ,UAAW,SAIb,OACEL,EAAAA,EAAAA,KAAA,OAAKE,MAAOO,EAAiBH,UAE3BY,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACThB,UAAW,GACXiB,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBR,MAAO,OACPS,SAAU,IACVC,OAAQ,UACRpB,SAAA,EACHN,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAACC,QAAQ,KAAKP,QAAQ,QAAQQ,aAAc,EAAGxB,UAAW,GAAGC,SAAC,YAGxEN,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACW,UAAU,OAAOnC,SAAUT,EAAO6C,aAAazB,UAClDY,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CACHC,WAAS,EACTC,QAAS,EACTd,GAAI,CAAEG,WAAY,SAAUC,eAAgB,UAAWlB,SAAA,EAEvDN,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAG/B,UACxBY,EAAAA,EAAAA,MAAA,SAAAZ,SAAA,EACEN,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CACRC,KAAK,QACL/B,KAAK,QACLgC,MAAM,QACNC,WAAS,EACTb,QAAQ,WACRc,MAAOxD,EAAOU,OAAOP,MACrBsD,SAAUzD,EAAO0D,aACjBC,OAAQ3D,EAAO4D,aAEhB5D,EAAOqB,OAAOlB,OAASH,EAAO6D,QAAQ1D,OACrCW,EAAAA,EAAAA,KAACD,EAAW,IACV,WAGRC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAG/B,UACxBY,EAAAA,EAAAA,MAAA,SAAAZ,SAAA,EACEN,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CACRC,KAAK,WACL/B,KAAK,WACLgC,MAAM,WACNC,WAAS,EACTb,QAAQ,WACRc,MAAOxD,EAAOU,OAAON,SACrBqD,SAAUzD,EAAO0D,aACjBC,OAAQ3D,EAAO4D,aAEhB5D,EAAOqB,OAAOjB,UAAYJ,EAAO6D,QAAQzD,UACxCU,EAAAA,EAAAA,KAACD,EAAW,IACV,WAGRC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,CACLpB,QAAQ,YACRzB,MAAM,UACN8C,KAAK,QACL7B,GAAI,CAAEf,UAAW,EAAGwB,aAAc,GAClCU,KAAK,SAAQjC,SACd,qBAQb,C","sources":["pages/LoginPage.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUserThunk } from 'redux/actions';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, Button, Grid, TextField, Typography } from '@mui/material';\nimport p from '../images/white.jpeg';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().min(2).required('Please fill in this field'),\n      password: Yup.string().min(7).required('Please fill in this field'),\n    }),\n    onSubmit: values => {\n      dispatch(\n        loginUserThunk({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      formik.resetForm();\n    },\n  });\n\n  const FormikError = () => {\n    return (\n      <div className=\"error\" style={{color: '#ef7373', textAlign: 'left', marginTop: 10}}>{formik.errors.name}</div>\n    )\n  }\n\n  const backgroundStyles = {\n    backgroundImage: `url(${p})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'top',\n    width: '100vw',\n    height: '100vh',\n    marginTop: '-10px'\n  };\n\n\n  return (\n    <div style={backgroundStyles}>\n      \n      <Box\n        sx={{\n          display: 'flex',\n          marginTop: 32,\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          maxWidth: 600,\n          margin: '0 auto',\n        }}\n      ><Typography variant=\"h6\" display=\"block\" marginBottom={4} marginTop={10}>\n        LOG IN\n      </Typography>\n        <Box component=\"form\" onSubmit={formik.handleSubmit}>\n          <Grid\n            container\n            spacing={2}\n            sx={{ alignItems: 'center', justifyContent: 'center' }}\n          >\n            <Grid item xs={12} md={10}>\n              <label>\n                <TextField\n                  type=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  fullWidth\n                  variant=\"outlined\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n                {formik.errors.email && formik.touched.email ? (\n                  <FormikError/>\n                ) : null}\n              </label>\n            </Grid>\n            <br />\n            <Grid item xs={12} md={10}>\n              <label>\n                <TextField\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  fullWidth\n                  variant=\"outlined\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n                {formik.errors.password && formik.touched.password ? (\n                  <FormikError/>\n                ) : null}\n              </label>\n            </Grid>\n            <br />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              sx={{ marginTop: 4, marginBottom: 4 }}\n              type=\"submit\"\n            >\n              Sign Up\n            </Button>\n          </Grid>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","formik","useFormik","initialValues","email","password","validationSchema","Yup","min","required","onSubmit","values","loginUserThunk","resetForm","FormikError","_jsx","className","style","color","textAlign","marginTop","children","errors","name","backgroundStyles","backgroundImage","concat","p","backgroundSize","backgroundRepeat","backgroundPosition","width","height","_jsxs","Box","sx","display","flexDirection","alignItems","justifyContent","maxWidth","margin","Typography","variant","marginBottom","component","handleSubmit","Grid","container","spacing","item","xs","md","TextField","type","label","fullWidth","value","onChange","handleChange","onBlur","handleBlur","touched","Button","size"],"sourceRoot":""}