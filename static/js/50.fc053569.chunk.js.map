{"version":3,"file":"static/js/50.fc053569.chunk.js","mappings":"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","sources":["pages/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUserThunk } from 'redux/actions';\nimport {useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {Box, Button, Grid, TextField, Typography} from '@mui/material';\nimport { selectAuthentificated } from 'redux/selectors';\nimport { Navigate } from 'react-router-dom';\nimport p from '../images/white.jpeg';\n\nconst RegisterPage = () => {\n\n  const dispatch = useDispatch();\n  const authentificated = useSelector(selectAuthentificated);\n\n   const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    }, \n    validationSchema: Yup.object({\n      name: Yup.string().min(2).required('Please fill in this field'),\n      email: Yup.string().email('Wrong email address').required('Please fill in this field'),\n      password: Yup.string().min(7).required('Please fill in this field')\n    }),\n    onSubmit: values => {\n      dispatch(registerUserThunk({\n        name: values.name,\n        email: values.email,\n        password: values.password\n      }));\n      formik.resetForm();\n    },\n   });\n\n   if(authentificated) {\n    return <Navigate to='/contacts'/>\n  };\n\n  const FormikError = () => {\n    return (\n      <div className=\"error\" style={{color: '#ef7373', textAlign: 'left', marginTop: 10}}>{formik.errors.name}</div>\n    )\n  }\n\n  const backgroundStyles = {\n    backgroundImage: `url(${p})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'top',\n    width: '100vw',\n    height: '100vh',\n    marginTop: '-10px'\n  };\n\n\n  return <div style={backgroundStyles}>\n    \n    <Box \n    sx={{\n      display: 'flex',\n      marginTop: 32,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      maxWidth: 600,\n      margin: '0 auto'\n    }}>\n      <Typography variant='h6' display='block' marginBottom={4} marginTop={10}>REGISTER</Typography>\n      <Box component=\"form\" onSubmit={formik.handleSubmit}>\n      <Grid container spacing={2} sx={{alignItems: 'center', justifyContent: 'center'}}>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='text' \n          name=\"name\" \n          label=\"Name\"\n          fullWidth\n          variant='outlined'\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.name && formik.touched.name ? <FormikError/> : null}\n      </label>\n      </Grid>\n      <br/>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='email' \n          name='email' \n          label='Email'\n          fullWidth\n          variant='outlined'\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.email && formik.touched.email ? <FormikError/> : null}\n      </label>\n      </Grid>\n      <br/>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='password' \n          name='password' \n          label='Password'\n          fullWidth\n          variant='outlined'\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.password && formik.touched.password ? <FormikError/> : null}\n      </label>\n      </Grid>\n      </Grid>\n      <br/>\n      <Button \n        variant=\"contained\" \n        color='primary'  \n        size='large' \n        sx={{marginTop: 4, marginBottom: 4}}\n        type='submit'>Sign Up</Button>\n    </Box>\n    </Box>\n  </div>;\n};\n      \n    export default RegisterPage;\n"],"names":["dispatch","useDispatch","authentificated","useSelector","selectAuthentificated","formik","useFormik","initialValues","name","email","password","validationSchema","Yup","min","required","onSubmit","values","registerUserThunk","resetForm","_jsx","Navigate","to","FormikError","className","style","color","textAlign","marginTop","children","errors","backgroundStyles","backgroundImage","concat","p","backgroundSize","backgroundRepeat","backgroundPosition","width","height","_jsxs","Box","sx","display","flexDirection","alignItems","justifyContent","maxWidth","margin","Typography","variant","marginBottom","component","handleSubmit","Grid","container","spacing","item","xs","md","TextField","type","label","fullWidth","value","onChange","handleChange","onBlur","handleBlur","touched","Button","size"],"sourceRoot":""}