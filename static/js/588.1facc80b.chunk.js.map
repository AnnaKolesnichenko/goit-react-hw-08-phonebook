{"version":3,"file":"static/js/588.1facc80b.chunk.js","mappings":"4PAyGA,UAlGkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KAAaC,IAAI,GAAGC,SAAS,6BACpCJ,SAAUE,EAAAA,KAAaC,IAAI,GAAGC,SAAS,+BAEzCC,SAAU,SAAAC,GACRZ,GACEa,EAAAA,EAAAA,IAAe,CACbR,MAAOO,EAAOP,MACdC,SAAUM,EAAON,YAGrBJ,EAAOY,WACT,IAGF,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,QAAQ,QAAQC,aAAc,EAAGC,UAAW,GAAGN,SAAC,YAGzEC,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CACFC,GAAI,CACFJ,QAAS,OACTE,UAAW,GACXG,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPC,SAAU,IACVC,OAAQ,UACRd,UAEFC,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACQ,UAAU,OAAOpB,SAAUT,EAAO8B,aAAahB,UAClDD,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CACHC,WAAS,EACTC,QAAS,EACTX,GAAI,CAAEE,WAAY,SAAUC,eAAgB,UAAWX,SAAA,EAEvDC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAGtB,UACxBD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,WAAS,EACTxB,QAAQ,WACRyB,MAAO1C,EAAOU,OAAOP,MACrBwC,SAAU3C,EAAO4C,aACjBC,OAAQ7C,EAAO8C,aAEhB9C,EAAO+C,OAAO5C,OAASH,EAAOgD,QAAQ7C,OACrCY,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,QAAOnC,SAAEd,EAAO+C,OAAO5C,QACpC,WAGRY,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAGtB,UACxBD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRC,KAAK,WACLC,KAAK,WACLC,MAAM,WACNC,WAAS,EACTxB,QAAQ,WACRyB,MAAO1C,EAAOU,OAAON,SACrBuC,SAAU3C,EAAO4C,aACjBC,OAAQ7C,EAAO8C,aAEhB9C,EAAO+C,OAAO3C,UAAYJ,EAAOgD,QAAQ5C,UACxCW,EAAAA,EAAAA,KAAA,OAAKkC,UAAU,QAAOnC,SAAEd,EAAO+C,OAAO3C,WACpC,WAGRW,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLjC,QAAQ,YACRkC,MAAM,UACNC,KAAK,QACL9B,GAAI,CAAEF,UAAW,EAAGD,aAAc,GAClCmB,KAAK,SAAQxB,SACd,qBAQb,C","sources":["pages/LoginPage.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUserThunk } from 'redux/actions';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, Button, Grid, TextField, Typography } from '@mui/material';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().min(2).required('Please fill in this field'),\n      password: Yup.string().min(7).required('Please fill in this field'),\n    }),\n    onSubmit: values => {\n      dispatch(\n        loginUserThunk({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <div>\n      <Typography variant=\"h6\" display=\"block\" marginBottom={4} marginTop={10}>\n        LOG IN\n      </Typography>\n      <Box\n        sx={{\n          display: 'flex',\n          marginTop: 32,\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          maxWidth: 600,\n          margin: '0 auto',\n        }}\n      >\n        <Box component=\"form\" onSubmit={formik.handleSubmit}>\n          <Grid\n            container\n            spacing={2}\n            sx={{ alignItems: 'center', justifyContent: 'center' }}\n          >\n            <Grid item xs={12} md={10}>\n              <label>\n                <TextField\n                  type=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  fullWidth\n                  variant=\"outlined\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n                {formik.errors.email && formik.touched.email ? (\n                  <div className=\"error\">{formik.errors.email}</div>\n                ) : null}\n              </label>\n            </Grid>\n            <br />\n            <Grid item xs={12} md={10}>\n              <label>\n                <TextField\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  fullWidth\n                  variant=\"outlined\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n                {formik.errors.password && formik.touched.password ? (\n                  <div className=\"error\">{formik.errors.password}</div>\n                ) : null}\n              </label>\n            </Grid>\n            <br />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              sx={{ marginTop: 4, marginBottom: 4 }}\n              type=\"submit\"\n            >\n              Sign Up\n            </Button>\n          </Grid>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","formik","useFormik","initialValues","email","password","validationSchema","Yup","min","required","onSubmit","values","loginUserThunk","resetForm","_jsxs","children","_jsx","Typography","variant","display","marginBottom","marginTop","Box","sx","flexDirection","alignItems","justifyContent","width","maxWidth","margin","component","handleSubmit","Grid","container","spacing","item","xs","md","TextField","type","name","label","fullWidth","value","onChange","handleChange","onBlur","handleBlur","errors","touched","className","Button","color","size"],"sourceRoot":""}