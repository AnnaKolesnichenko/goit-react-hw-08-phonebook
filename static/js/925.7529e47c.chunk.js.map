{"version":3,"file":"static/js/925.7529e47c.chunk.js","mappings":"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","sources":["components/FormikError/FormikError.js","images/background.js","pages/LoginPage.js"],"sourcesContent":["const FormikError = ({error}) => {\n    return (\n        <div \n            className=\"error\" \n            style={{color: '#ef7373', textAlign: 'left', marginTop: 10}}>{error}</div>\n    )\n};\n\nexport default FormikError;","import photo from '../images/white.jpeg';\n\nexport const backgroundStyles = {\n    backgroundImage: `url(${photo})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'top',\n    width: '100vw',\n    height: '100vh',\n    marginTop: '-10px'\n  };","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUserThunk } from 'redux/auth/actions';\nimport { selectAuthentificated } from 'redux/selectors';\nimport { Navigate } from 'react-router-dom';\nimport FormikError from 'components/FormikError/FormikError';\nimport { Box, Button, Grid, TextField, Typography } from '@mui/material';\nimport { backgroundStyles } from 'images/background';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const authenticated = useSelector(selectAuthentificated);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().min(2).required('Please fill in this field'),\n      password: Yup.string().min(7).required('Please fill in this field'),\n    }),\n    onSubmit: values => {\n      dispatch(\n        loginUserThunk({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      formik.resetForm();\n    },\n  });\n\n  if (authenticated) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <div style={backgroundStyles}>      \n      <Box\n        sx={{\n          display: 'flex',\n          marginTop: 32,\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          maxWidth: 600,\n          margin: '0 auto',\n        }}\n      >\n      <Typography variant=\"h6\" display=\"block\" marginBottom={4} marginTop={10}>\n        LOG IN\n      </Typography>\n        <Box component=\"form\" onSubmit={formik.handleSubmit}>\n          <Grid\n            container\n            spacing={2}\n            sx={{ alignItems: 'center', justifyContent: 'center' }}\n          >\n            <Grid item xs={12} md={10}>\n                <TextField\n                  type=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  fullWidth\n                  variant=\"outlined\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n                {formik.errors.email && formik.touched.email ? (\n                  <FormikError error={formik.errors.email}/>\n                ) : null}\n            </Grid>\n            <br />\n            <Grid item xs={12} md={10}>\n                <TextField\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  fullWidth\n                  variant=\"outlined\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n                {formik.errors.password && formik.touched.password ? (\n                  <FormikError error={formik.errors.password}/>\n                ) : null}\n            </Grid>\n            <br />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              sx={{ marginTop: 4, marginBottom: 4 }}\n              type=\"submit\"\n            >\n              Sign Up\n            </Button>\n          </Grid>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_ref","error","_jsx","className","style","color","textAlign","marginTop","children","backgroundStyles","backgroundImage","concat","photo","backgroundSize","backgroundRepeat","backgroundPosition","width","height","dispatch","useDispatch","authenticated","useSelector","selectAuthentificated","formik","useFormik","initialValues","email","password","validationSchema","Yup","min","required","onSubmit","values","loginUserThunk","resetForm","Navigate","to","_jsxs","Box","sx","display","flexDirection","alignItems","justifyContent","maxWidth","margin","Typography","variant","marginBottom","component","handleSubmit","Grid","container","spacing","item","xs","md","TextField","type","name","label","fullWidth","value","onChange","handleChange","onBlur","handleBlur","errors","touched","FormikError","Button","size"],"sourceRoot":""}