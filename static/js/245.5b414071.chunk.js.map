{"version":3,"file":"static/js/245.5b414071.chunk.js","mappings":"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","sources":["components/FormikError/FormikError.js","images/background.js","pages/RegisterPage.js"],"sourcesContent":["const FormikError = ({error}) => {\n    return (\n        <div \n            className=\"error\" \n            style={{color: '#ef7373', textAlign: 'left', marginTop: 10}}>{error}</div>\n    )\n};\n\nexport default FormikError;","import photo from '../images/white.jpeg';\n\nexport const backgroundStyles = {\n    backgroundImage: `url(${photo})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'top',\n    width: '100vw',\n    height: '100vh',\n    marginTop: '-10px'\n  };","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUserThunk } from 'redux/auth/actions';\nimport {useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {Box, Button, Grid, TextField, Typography} from '@mui/material';\nimport { selectAuthentificated } from 'redux/selectors';\nimport { Navigate } from 'react-router-dom';\n\nimport FormikError from 'components/FormikError/FormikError';\nimport { backgroundStyles } from 'images/background';\n\nconst RegisterPage = () => {\n\n  const dispatch = useDispatch();\n  const authentificated = useSelector(selectAuthentificated);\n\n   const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    }, \n    validationSchema: Yup.object({\n      name: Yup.string().min(2).required('Please fill in this field'),\n      email: Yup.string().email('Wrong email address').required('Please fill in this field'),\n      password: Yup.string().min(7).required('Please fill in this field')\n    }),\n    onSubmit: values => {\n      dispatch(registerUserThunk({\n        name: values.name,\n        email: values.email,\n        password: values.password\n      }));\n      formik.resetForm();\n    },\n   });\n\n   if(authentificated) {\n    return <Navigate to='/contacts'/>\n  };\n\n\n  return (\n  <div style={backgroundStyles}>    \n    <Box \n    sx={{\n      display: 'flex',\n      marginTop: 32,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      maxWidth: 600,\n      margin: '0 auto'\n    }}>\n      <Typography variant='h6' display='block' marginBottom={4} marginTop={10}>REGISTER</Typography>\n      <Box component=\"form\" onSubmit={formik.handleSubmit}>\n      <Grid container spacing={2} sx={{alignItems: 'center', justifyContent: 'center'}}>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='text' \n          name=\"name\" \n          label=\"Name\"\n          fullWidth\n          variant='outlined'\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.name && formik.touched.name ? <FormikError error={formik.errors.name}/> : null}\n      </label>\n      </Grid>\n      <br/>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='email' \n          name='email' \n          label='Email'\n          fullWidth\n          variant='outlined'\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.email && formik.touched.email ? <FormikError error={formik.errors.email}/> : null}\n      </label>\n      </Grid>\n      <br/>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='password' \n          name='password' \n          label='Password'\n          fullWidth\n          variant='outlined'\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.password && formik.touched.password ? <FormikError error={formik.errors.password}/> : null}\n      </label>\n      </Grid>\n      </Grid>\n      <br/>\n      <Button \n        variant=\"contained\" \n        color='primary'  \n        size='large' \n        sx={{marginTop: 4, marginBottom: 4}}\n        type='submit'>Sign Up</Button>\n    </Box>\n    </Box>\n  </div>\n  )\n};\n      \n    export default RegisterPage;\n"],"names":["_ref","error","_jsx","className","style","color","textAlign","marginTop","children","backgroundStyles","backgroundImage","concat","photo","backgroundSize","backgroundRepeat","backgroundPosition","width","height","dispatch","useDispatch","authentificated","useSelector","selectAuthentificated","formik","useFormik","initialValues","name","email","password","validationSchema","Yup","min","required","onSubmit","values","registerUserThunk","resetForm","Navigate","to","_jsxs","Box","sx","display","flexDirection","alignItems","justifyContent","maxWidth","margin","Typography","variant","marginBottom","component","handleSubmit","Grid","container","spacing","item","xs","md","TextField","type","label","fullWidth","value","onChange","handleChange","onBlur","handleBlur","errors","touched","FormikError","Button","size"],"sourceRoot":""}