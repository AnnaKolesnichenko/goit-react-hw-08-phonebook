{"version":3,"file":"static/js/50.c7557f1d.chunk.js","mappings":"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","sources":["pages/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUserThunk } from 'redux/actions';\nimport {useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {Box, Button, Grid, TextField, Typography} from '@mui/material';\nimport { selectAuthentificated } from 'redux/selectors';\nimport { Navigate } from 'react-router-dom';\n\nconst RegisterPage = () => {\n\n  const dispatch = useDispatch();\n  const authentificated = useSelector(selectAuthentificated);\n\n   const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    }, \n    validationSchema: Yup.object({\n      name: Yup.string().min(2).required('Please fill in this field'),\n      email: Yup.string().email('Wrong email address').required('Please fill in this field'),\n      password: Yup.string().min(7).required('Please fill in this field')\n    }),\n    onSubmit: values => {\n      dispatch(registerUserThunk({\n        name: values.name,\n        email: values.email,\n        password: values.password\n      }));\n      formik.resetForm();\n    },\n   });\n\n   if(authentificated) {\n    return <Navigate to='/contacts'/>\n  };\n\n  return <div>\n    <Typography variant='h6' display='block' marginBottom={4} marginTop={10}>REGISTER</Typography>\n    <Box \n    sx={{\n      display: 'flex',\n      marginTop: 32,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      maxWidth: 600,\n      margin: '0 auto'\n    }}>\n      <Box component=\"form\" onSubmit={formik.handleSubmit}>\n      <Grid container spacing={2} sx={{alignItems: 'center', justifyContent: 'center'}}>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='text' \n          name=\"name\" \n          label=\"Name\"\n          fullWidth\n          variant='outlined'\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.name && formik.touched.name ? <div className=\"error\">{formik.errors.name}</div> : null}\n      </label>\n      </Grid>\n      <br/>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='email' \n          name='email' \n          label='Email'\n          fullWidth\n          variant='outlined'\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.email && formik.touched.email ? <div className=\"error\">{formik.errors.email}</div> : null}\n      </label>\n      </Grid>\n      <br/>\n      <Grid item xs={12} md={10}>\n      <label>\n        <TextField \n          type='password' \n          name='password' \n          label='Password'\n          fullWidth\n          variant='outlined'\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}/>\n          {formik.errors.password && formik.touched.password ? <div className=\"error\">{formik.errors.password}</div> : null}\n      </label>\n      </Grid>\n      </Grid>\n      <br/>\n      <Button \n        variant=\"contained\" \n        color='primary'  \n        size='large' \n        sx={{marginTop: 4, marginBottom: 4}}\n        type='submit'>Sign Up</Button>\n    </Box>\n    </Box>\n  </div>;\n};\n      \n    export default RegisterPage;\n"],"names":["dispatch","useDispatch","authentificated","useSelector","selectAuthentificated","formik","useFormik","initialValues","name","email","password","validationSchema","Yup","min","required","onSubmit","values","registerUserThunk","resetForm","_jsx","Navigate","to","_jsxs","children","Typography","variant","display","marginBottom","marginTop","Box","sx","flexDirection","alignItems","justifyContent","width","maxWidth","margin","component","handleSubmit","Grid","container","spacing","item","xs","md","TextField","type","label","fullWidth","value","onChange","handleChange","onBlur","handleBlur","errors","touched","className","Button","color","size"],"sourceRoot":""}